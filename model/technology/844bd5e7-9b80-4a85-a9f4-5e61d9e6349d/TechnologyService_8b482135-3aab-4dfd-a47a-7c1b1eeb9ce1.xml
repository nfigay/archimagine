<archimate:TechnologyService
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="AzureResourceManagerTemplates"
    id="8b482135-3aab-4dfd-a47a-7c1b1eeb9ce1"
    documentation="https://azure.microsoft.com/en-us/services/arm-templates/&#xA;Azure Resource Manager templates&#xA;Deliver infrastructure as code for all your Azure resources using Resource Manager templates&#xA;cf. also https://chapsas.com/getting-started-deploying-resources-in-azure-with-arm-templates/&#xA;&#xA;Define infrastructure as code to manage your Azure resources&#xA;Manage your Azure using a simple configuration language. Deploy your resources in parallel to speed up your deployment process. Create and update any Azure resource declaratively. Use one of many sample templates or build one from scratch using native tooling in Visual Studio or Visual Studio Code.&#xA;&#xA;Declarative and repeatable creation of any Azure resource&#xA;Centralized management of your deployments&#xA;Deep integration with other Azure services, such as Azure Policy to remediate non-compliant resources and Azure DevOps for CI/CD&#xA;First-class authoring experience with Visual Studio and Visual Studio Code&#xA;&#xA;Create reproducible infrastructure&#xA;&#xA;Create and deploy your entire Azure infrastructure declaratively using Resource Manager templates. Throughout your development lifecycle, repeatably and consistently deploy resources including virtual machines, network infrastructure, and storage systems.&#xA;&#xA;Author templates using your existing development tools and great community samples&#xA;&#xA;Enhance your template development authoring experience by using the Visual Studio Code extension for Resource Manager. Use features like syntax highlighting for Resource Manager language functions, support for comments, and IntelliSense code completion to develop your own templates and build on top of community-built samples that offer a variety of infrastructure and application patterns.&#xA;Deploy using familiar tools&#xA;&#xA;Iterate on your template deployments quickly by using REST APIs, CLI, or PowerShell. Integrate your deployment tasks with your DevOps pipelines for a CI/CD setup that can automate your deployments at scale.&#xA;&#xA;Integrate with Azure platform features&#xA;&#xA;Review deployments in the Azure portal see which parameter values were used and any output values. Use Azure Policy to remediate non-compliant resources. Check templates into source control to review, trace, and audit your infrastructure. Create your environment by combining templates using Azure Blueprints.&#xA;&#xA;Deploy using familiar tools&#xA;Deploy using the Azure CLI&#xA;&#xA;Learn more&#xA;Deploy using PowerShell&#xA;&#xA;Use Azure PowerShell with Resource Manager templates to deploy your resources to Azure&#xA;&#xA;Learn more&#xA;Integrate with your favorite CI/CD tools&#xA;&#xA;You can integrate templates into your continuous integration and continuous deployment (CI/CD) tools, which can automate your release pipelines for fast and reliable application and infrastructure updates">
  <properties
      key="icon"
      value="/Management/AzureResourceManagerTemplates.png"/>
  <properties
      key="icon size"
      value="50x30"/>
</archimate:TechnologyService>
