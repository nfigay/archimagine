<archimate:TechnologyService
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="AzureServiceFabric"
    id="6f4a99ca-b732-460b-85ac-bb8cf7f353f3"
    documentation="Azure Service Fabric&#xA;Build and operate always-on, scalable, distributed apps&#xA;&#xA;Simplify microservices development and application lifecycle management&#xA;Reliably scale and orchestrate containers and microservices&#xA;Data-aware platform for low-latency, high-throughput workloads with stateful containers or microservices&#xA;Run anything – your choice of languages and programming models&#xA;Run anywhere – supports Windows/Linux in Azure, on-premises, or other clouds&#xA;Scales up to thousands of machines&#xA;&#xA;https://azure.microsoft.com/en-us/services/service-fabric/&#xA;&#xA;Trust a proven platform for mission-critical applications&#xA;Focus on building applications and business logic, and let Azure solve the hard distributed systems problems such as reliability, scalability, management, and latency. Service Fabric is an open source project and it powers core Azure infrastructure as well as other Microsoft services such as Skype for Business, Intune, Azure Event Hubs, Azure Data Factory, Azure Cosmos DB, Azure SQL Database, Dynamics 365, and Cortana. Designed to deliver highly available and durable services at cloud-scale, Azure Service Fabric intrinsically understands the available infrastructure and resource needs of applications, enabling automatic scale, rolling upgrades, and self-healing from faults when they occur.&#xA;&#xA;Choose from a variety of productive programming models and languages including .NET Core 2.0, C#, and Java to build your microservice and container-based applications. Deploy Service Fabric cluster in Azure or use Azure Service Fabric mesh - a fully managed microservices platform, currently in preview. Azure Service Fabric is also available as a free download for Windows Server, enabling you to create Service Fabric clusters on premises or in other clouds.&#xA;&#xA;Simplify building and managing microservice applications&#xA;Fast time to market: Focus on building features that add business value to your application, without the overhead of designing and writing additional code to deal with issues of reliability, scalability, management, or latency in the underlying infrastructure.&#xA;Container and service orchestration in the same environment: Bring your Docker containers on Linux or Windows and run them reliably at scale alongside other workloads and services. Take advantage of Azure Service Fabric’s container hosting, cluster resource management, and workload orchestration capabilities.&#xA;Choose your architecture: Build stateless or stateful microservices—an architectural approach where complex applications are composed of small, independently versioned services—to power the most complex, low-latency, data-intensive scenarios and scale them into or across the cloud with Azure Service Fabric. Mix and match the programming models and languages that work for you, from containers and guest-executables to microservices and actors.&#xA;Microservice agility: Enable continuous integration and development practices and accelerate delivery of new features by architecting fine-grained microservice applications.&#xA;IDE integration: Quickly and easily build, test, debug, deploy, and upgrade Service Fabric applications in single-box, test, and production environments. Do this using the IDE tool of your choice, such as Visual Studio, Eclipse, or command-line support.&#xA;Run anywhere: Flexibly deploy the same application code on public, hosted, or private clouds using consistent platform services and the same application programming models, with a choice of Windows Server or Linux (Ubuntu or RHEL) as the host operating system.&#xA;&#xA;Deliver low latency and improved efficiency at massive scale&#xA;Deliver fast yet safe upgrades with zero downtime, automate scale operations, integrate health monitoring, and provide automatic recovery from failures. Orchestrate microservices and container-based apps, gain insight into application health and performance, and enable development of low-latency, resilient services that scale.&#xA;&#xA;Solve difficult distributed systems problems such as reliable failure detection and failover, leader election, state management, service discovery, rolling upgrades, application portability, environment abstraction, resource management and governance, and configuration management, and provide application lifecycle management capabilities so developers don’t have to re-architect applications as usage grows. Develop and deliver many kinds of applications and workloads, including multi-tenant SaaS applications, mission-critical line-of-business applications, IoT data gathering and processing workloads, and gaming.">
  <properties
      key="icon"
      value="/Compute/AzureServiceFabric.png"/>
  <properties
      key="icon size"
      value="50x50"/>
</archimate:TechnologyService>
